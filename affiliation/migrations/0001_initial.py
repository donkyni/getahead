# Generated by Django 3.1.1 on 2020-10-27 21:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CodePays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pays', models.CharField(max_length=100, null=True)),
                ('code_pays', models.CharField(max_length=15, null=True)),
                ('archive', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Groupe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_du_groupe', models.CharField(help_text='Le nom du groupe permet de différencier les groupes, ex. Groupe 1', max_length=255, null=True)),
                ('manageur_du_groupe', models.CharField(help_text='Celui pour qui le groupe se cré et contiendra tous ses filleuls', max_length=255)),
                ('archive', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Niveau',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_du_niveau', models.CharField(max_length=255, null=True)),
                ('archive', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_du_parent', models.CharField(max_length=255, null=True)),
                ('code_du_parent', models.CharField(max_length=255, null=True)),
                ('archive', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Poste',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_du_poste', models.CharField(max_length=255, null=True)),
                ('archive', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Palier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_du_palier', models.CharField(max_length=255, null=True)),
                ('archive', models.BooleanField(default=False)),
                ('niveau', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='affiliation.niveau')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('code', models.CharField(help_text='Ce code servira à se connecter à la plateforme, également pour parrainer un membre. Ex. 228DS000000001', max_length=255, null=True, unique=True)),
                ('nom', models.CharField(max_length=255, unique=True)),
                ('prenom', models.CharField(max_length=255, null=True, unique=True)),
                ('adresse', models.CharField(max_length=255, null=True)),
                ('telephone', models.IntegerField(null=True, unique=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars')),
                ('annee_de_naissance', models.DateField(blank=True, null=True)),
                ('sexe', models.CharField(blank=True, choices=[('Homme', 'Homme'), ('Femme', 'Femme')], help_text='Le sexe servira pour les statistiques', max_length=120, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('date_d_ajout', models.DateTimeField(auto_now_add=True, null=True, verbose_name="Date d'enrégistrement de l'utilisateur")),
                ('groupe', models.ForeignKey(help_text="Le groupe permettra de voir l'ensemble de ses membres", null=True, on_delete=django.db.models.deletion.SET_NULL, to='affiliation.groupe')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('nom_du_parent', models.ForeignKey(blank=True, help_text="Indiquez le parent qui l'adhère. S'il est le premier membre de son groupe, laissez vide", null=True, on_delete=django.db.models.deletion.SET_NULL, to='affiliation.parent')),
                ('palier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='affiliation.palier')),
                ('pays_de_residence', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='affiliation.codepays')),
                ('poste', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='affiliation.poste')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateur',
                'ordering': ('-id',),
            },
        ),
    ]
